{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Virtual Network"
			}
		},
		"vnetAddressPrefix": {
			"type": "string",
			"metadata": {
				"description": "The IP Address pool for the virtual network in CIDR format."
			}
		},
		"nsgName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Network Security Group."
			}
		},
		"securityRules.Name": {
			"type": "string",
			"metadata": {
				"description": "Name of the Security Rule."
			}
		},
		"securityRules.properties.protocol": {
			"type": "string",
			"allowedValues": [
				"TCP",
				"UDP"
			],
			"metadata": {
				"description": "Protocol of the Security Rule, select from allowed values."
			}
		},
		"securityRules.properties.sourcePortRange": {
			"type": "string",
			"metadata": {
				"description": "Source Address Range of the Security Rule, can be Internet or any exisitng network/subnets."
			}
		},
		"securityRules.properties.destinationPortRange": {
			"type": "string",
			"metadata": {
				"description": "Destination Address Range of the Security Rule, can be any existing network/subnets."
			}
		},
		"securityRules.properties.sourceAddressPrefix": {
			"type": "string",
			"metadata": {
				"description": "Destination Address Range of the Security Rule, can be any existing network/subnets."
			}
		},
		"securityRules.properties.destinationAddressPrefix": {
			"type": "string",
			"metadata": {
				"description": "The Destination IP Address pool for the NSG in CIDR format."
			}
		},
		"securityRules.properties.access": {
			"type": "string",
			"allowedValues": [
				"Allow",
				"Deny"
			],
			"metadata": {
				"description": "Access type of the NSG, either Allow or Deny traffic."
			}
		},
		"securityRules.properties.priority": {
			"type": "string",
			"metadata": {
				"description": "Priority number of the rule, preferably have the format in hundreds, eg: 100,200,300 etc."
			}
		},
		"securityRules.properties.direction": {
			"type": "string",
			"allowedValues": [
				"Inbound",
				"Outbound"
			],
			"metadata": {
				"description": "Direction allowed by the Security group for traffic flow, could be either Inbound or Outbound"
			}
		},
		"nextHopIP": {
			"type": "string",
			"metadata": {
				"description": "The next hop ip, this should be an address in the firewall subnet"
			}
		},
		"subnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Subnet"
			}
		},
		"subnetPrefix": {
			"type": "string",
			"metadata": {
				"description": "The IP Address pool for the Subnet in CIDR format."
			}
		},
		"azfwRouteTableName": {
			"type": "string",
			"defaultvalue": "azfwRouteTable",
			"metadata": {
				"description": "Name of the Route table for external firewall connectivity."
			}
		},
		"firewallSubnetName": {
			"type": "string",
			"defaultvalue": "AzureFirewallSubnet",
			"metadata": {
				"description": "Firewall subnet name"
			}
		},
		"azureFirewallSubnetPrefix": {
			"type": "string",
			"metadata": {
				"description": "Address Prefix of the Firewall subnet, prefer to have 10.x.255.0/24 as a standard practice"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_ZRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Type of the Storage Account, please choose from allowed values"
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Storage Account, must be unique as it has a FQDN"
			}
		},
		"storageAccountKind": {
			"type": "string",
			"allowedValues": [
				"Storage",
				"StorageV2",
				"BlobStorage",
				"FileStorage",
				"BlockBlobStorage"
			],
			"metadata": {
				"description": "Storage Account kind"
			}
		},
		"publicIPAddressName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Public IP Address"
			}
		},
		"publicIPAllocationMethod": {
			"type": "string",
			"defaultValue": "Dynamic",
			"allowedValues": [
				"Static",
				"Dynamic"
			],
			"metadata": {
				"description": "Allocation method of the Public IP Address, must be either Static or Dynamic Allocation"
			}
		},
		"lbName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Load Balancer"
			}
		},
		"vmssName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Virtual Machine Scale Set"
			}
		}
	},
	"variables": {
		"templateBaseUrl": "https://raw.githubusercontent.com/rangerlynch7/DemoARMTemplate/master/",
		"virtualNetworkTemplateUrl": "[concat(variables('templateBaseUrl'), 'VirtualNetwork.json')]",
		"nsgTemplateUrl": "[concat(variables('templateBaseUrl'), 'NetworkSecurityGroup.json')]",
		"routeTableTemplateUrl": "[concat(variables('templateBaseUrl'), 'RouteTable.json')]",
		"subnetTemplateUrl": "[concat(variables('templateBaseUrl'), 'Subnet.json')]",
		"firewallSubnetTemplateUrl": "[concat(variables('templateBaseUrl'), 'FirewallSubnet.json')]",
		"azFirewallTemplateUrl": "[concat(variables('templateBaseUrl'), 'AzureFirewall.json')]",
		"storageAccountTemplateUrl": "[concat(variables('templateBaseUrl'), 'StorageAccount.json')]",
		"publicIPTemplateUrl": "[concat(variables('templateBaseUrl'), 'PublicIP.json')]",
		"lbTemplateUrl": "[concat(variables('templateBaseUrl'), 'LoadBalancer.json')]",
		"vmssTemplateUrl": "[concat(variables('templateBaseUrl'), 'Vmss.json')]"
	},
	"resources": [
		{
			"apiVersion": "2017-05-10",
			"name": "VnetDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('virtualNetworkTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"vnetAddressPrefix": {
						"value": "[parameters('vnetAddressPrefix')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "nsgDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('nsgTemplateUrl')]"
				},
				"parameters": {
					"nsgName": {
						"value": "[parameters('nsgName')]"
					},
					"securityRules.Name": {
						"value": "[parameters('securityRules.Name')]"
					},
					"securityRules.properties.protocol": {
						"value": "[parameters('securityRules.properties.protocol')]"
					},
					"securityRules.properties.sourcePortRange": {
						"value": "[parameters('securityRules.properties.sourcePortRange')]"
					},
					"securityRules.properties.destinationPortRange": {
						"value": "[parameters('securityRules.properties.destinationPortRange')]"
					},
					"securityRules.properties.sourceAddressPrefix": {
						"value": "[parameters('securityRules.properties.sourceAddressPrefix')]"
					},
					"securityRules.properties.destinationAddressPrefix": {
						"value": "[parameters('securityRules.properties.destinationAddressPrefix')]"
					},
					"securityRules.properties.access": {
						"value": "[parameters('securityRules.properties.access')]"
					},
					"securityRules.properties.priority": {
						"value": "[parameters('securityRules.properties.priority')]"
					},
					"securityRules.properties.direction": {
						"value": "[parameters('securityRules.properties.direction')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "routeTableDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('routeTableTemplateUrl')]"
				},
				"parameters": {
					"nextHopIP": {
						"value": "[parameters('nextHopIP')]"
					},
					"azfwRouteTableName": {
						"value": "[parameters('azfwRouteTableName')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "SubnetDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('subnetTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"vnetAddressPrefix": {
						"value": "[parameters('vnetAddressPrefix')]"
					},
					"subnetName": {
						"value": "[parameters('subnetName')]"
					},
					"subnetPrefix": {
						"value": "[parameters('subnetPrefix')]"
					},
					"nsgName": {
						"value": "[parameters('nsgName')]"
					},
					"azfwRouteTableName": {
						"value": "[parameters('azfwRouteTableName')]"
					}
				}
			},
			"dependsOn": [
				"VnetDeployment",
				"nsgDeployment",
				"routeTableDeployment"
			]
		},
		{
			"apiVersion": "2017-05-10",
			"name": "firewallSubnetDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('firewallSubnetTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"vnetAddressPrefix": {
						"value": "[parameters('vnetAddressPrefix')]"
					},
					"subnetName": {
						"value": "[parameters('firewallSubnetName')]"
					},
					"subnetPrefix": {
						"value": "[parameters('azureFirewallSubnetPrefix')]"
					}
				}
			},
			"dependsOn": [
				"VnetDeployment"
			]
		},
		{
			"apiVersion": "2017-05-10",
			"name": "azFirewallDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('azFirewallTemplateUrl')]"
				},
				"parameters": {
					"vnetName": {
						"value": "[parameters('vnetName')]"
					},
					"firewallSubnetName": {
						"value": "[parameters('firewallSubnetName')]"
					}
				}
			},
			"dependsOn": [
				"VnetDeployment",
				"firewallSubnetDeployment"
			]
		},
		{
			"apiVersion": "2017-05-10",
			"name": "storageAccountDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('storageAccountTemplateUrl')]"
				},
				"parameters": {
					"storageAccountName": {
						"value": "[parameters('storageAccountName')]"
					},
					"storageAccountType": {
						"value": "[parameters('storageAccountType')]"
					},
					"storageAccountKind": {
						"value": "[parameters('storageAccountKind')]"
					}
				}
			}
		},
		{
			"apiVersion": "2017-05-10",
			"name": "lbDeployment",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('lbTemplateUrl')]"
				},
				"parameters": {
					"lbName": {
						"value": "[parameters('lbName')]"
					},
					"publicIPAddressName": {
						"value": "[parameters('publicIPAddressName')]"
					},
					"publicIPAllocationMethod": {
						"value": "[parameters('publicIPAllocationMethod')]"
					},
					"vmssName": {
						"value": "[parameters('vmssName')]"
					}
				}
			}
		}
	]
}